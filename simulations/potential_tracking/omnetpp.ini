[General]
network = TrackingScenario
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))

*.numUAVs = 10
*.numChargingCars = 3
*.numPedestrians = 40

num-rngs = 3
**.mobility.rng-0 = 1
#**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true

tkenv-plugin-path = ../../../etc/plugins

# mobility

#**.pedestrian[*].mobility.typename = "MassMobility"
#**.pedestrian[*].mobility.speed = truncnormal(1mps, 0.2mps)
##**.pedestrian[*].mobility.speed = 0mps
#**.pedestrian[*].mobility.changeInterval = truncnormal(2s, 0.5s)
#**.pedestrian[*].mobility.angleDelta = normal(0deg, 30deg)
#**.pedestrian[*].mobility.initFromDisplayString = false

**.pedestrian[*].mobility.typename = "RandomWaypointMobility"
**.pedestrian[*].mobility.initFromDisplayString = false
**.pedestrian[*].mobility.speed = uniform(1mps,3mps)
**.pedestrian[*].mobility.waitTime = uniform(3s,8s)





**.uav[*].mobility.typename = "PotentialForceMobility"
**.uav[*].mobility.speed = truncnormal(10mps, 1mps)
**.uav[*].mobility.initFromDisplayString = false

**.mobcharger[*].mobility.typename = "PotentialForceMobility"
**.mobcharger[*].mobility.speed = truncnormal(20mps, 8mps)
**.mobcharger[*].mobility.initFromDisplayString = false

**.mobility.updateInterval = 100ms
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m


# ping app (host[0] pinged by others)
*.cloud.app[*].startTime = 0s
*.cloud.app[*].stopTime = 10000s

*.cloud.app[*].areaMinX = 0m
*.cloud.app[*].areaMaxX = 0m
*.cloud.app[*].areaMinY = 1000m
*.cloud.app[*].areaMaxY = 1000m

*.cloud.app[*].wp = 5
*.cloud.app[*].kp = 0.000000001
*.cloud.app[*].dp = 500

*.cloud.app[*].wu = 20
*.cloud.app[*].ku = 0.000001
*.cloud.app[*].du = 10

*.cloud.app[*].wc = 2
*.cloud.app[*].kc = 0.0000000001
*.cloud.app[*].dc = 500

*.cloud.app[*].wk = 20
*.cloud.app[*].kk = 0.0000
*.cloud.app[*].dk = 10

*.cloud.app[*].kr = 0.0001
*.cloud.app[*].dr = 50
*.cloud.app[*].coverageDistance = 50m

*.cloud.app[*].epsilon = 0.1
*.cloud.app[*].force_exponent = 2
*.cloud.app[*].deattraction_impact = 0.9

*.cloud.app[*].rechargeTimeOffset = 60s

[Config SuperpositioningMobility]
description = "superpositioning"

*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mobilityVisualizer.displayOrientations = false
*.visualizer.mobilityVisualizer.displayVelocities = false

**.pedestrian[*].mobility.typename = "SuperpositioningMobility"
**.pedestrian[*].mobility.numElements = 3

# starting from the corner
**.pedestrian[*].mobility.element[0].typename = "StationaryMobility"
**.pedestrian[*].mobility.element[0].constraintAreaMinX = 50m
**.pedestrian[*].mobility.element[0].constraintAreaMinY = 50m
**.pedestrian[*].mobility.element[0].constraintAreaMaxX = 150m
**.pedestrian[*].mobility.element[0].constraintAreaMaxY = 150m
**.pedestrian[*].mobility.element[0].initFromDisplayString = false

#tractor mobility
**.pedestrian[*].mobility.element[1].typename = "TractorMobility"
**.pedestrian[*].mobility.element[1].x1 = 100m
**.pedestrian[*].mobility.element[1].y1 = 100m
**.pedestrian[*].mobility.element[1].x2 = 900m
**.pedestrian[*].mobility.element[1].y2 = 900m
**.pedestrian[*].mobility.element[1].rowCount = 4
**.pedestrian[*].mobility.element[1].speed = 3mps

#**.pedestrian[1..].mobility.element[1].typename = "AttachedMobility" # other hosts follow the movement of the 2nd element of host[0]'s mobility superposition 
#**.pedestrian[1..].mobility.element[1].mobilityModule = "^.^.^.pedestrian[0].mobility.element[1]"

# other hosts are also slightly moving randomly around their position in the group
**.pedestrian[*].mobility.element[2].typename = "MassMobility"
**.pedestrian[*].mobility.element[2].faceForward = false
**.pedestrian[*].mobility.element[2].initFromDisplayString = false
**.pedestrian[*].mobility.element[2].initialX = 0m
**.pedestrian[*].mobility.element[2].initialY = 0m
**.pedestrian[*].mobility.element[2].initialZ = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMinX = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMinY = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMaxX = 50m # limiting the random movement
**.pedestrian[*].mobility.element[2].constraintAreaMaxY = 50m # limiting the random movement
**.pedestrian[*].mobility.element[2].changeInterval = truncnormal(2s, 1s)
**.pedestrian[*].mobility.element[2].angleDelta = normal(0deg, 30deg)
**.pedestrian[*].mobility.element[2].speed = truncnormal(2mps, 0.5mps)



[Config SuperpositioningMobility2]
description = "superpositioning"

*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mobilityVisualizer.displayOrientations = false
*.visualizer.mobilityVisualizer.displayVelocities = false

**.pedestrian[*].mobility.typename = "SuperpositioningMobility"
**.pedestrian[*].mobility.numElements = 3

# starting from the corner
**.pedestrian[*].mobility.element[0].typename = "StationaryMobility"
**.pedestrian[*].mobility.element[0].constraintAreaMinX = 0m
**.pedestrian[*].mobility.element[0].constraintAreaMinY = 0m
**.pedestrian[*].mobility.element[0].constraintAreaMaxX = 200m
**.pedestrian[*].mobility.element[0].constraintAreaMaxY = 200m
**.pedestrian[*].mobility.element[0].initFromDisplayString = false

#tractor mobility
**.pedestrian[0].mobility.element[1].typename = "TractorMobility"
**.pedestrian[0].mobility.element[1].x1 = 100m
**.pedestrian[0].mobility.element[1].y1 = 100m
**.pedestrian[0].mobility.element[1].x2 = 900m
**.pedestrian[0].mobility.element[1].y2 = 900m
**.pedestrian[0].mobility.element[1].rowCount = 4
**.pedestrian[0].mobility.element[1].speed = 3mps

**.pedestrian[1..].mobility.element[1].typename = "PotentialForceMobility"
**.pedestrian[1..].mobility.element[1].speed = truncnormal(20mps, 8mps)
**.pedestrian[1..].mobility.element[1].initialX = 0m
**.pedestrian[1..].mobility.element[1].initialY = 0m
**.pedestrian[1..].mobility.element[1].initialZ = 0m
#**.pedestrian[1..].mobility.element[1].constraintAreaMinX = 0m
#**.pedestrian[1..].mobility.element[1].constraintAreaMinY = 0m
#**.pedestrian[1..].mobility.element[1].constraintAreaMaxX = 1000m # limiting the random movement
#**.pedestrian[1..].mobility.element[1].constraintAreaMaxY = 1000m # limiting the random movement
**.pedestrian[1..].mobility.element[1].initFromDisplayString = false

#**.pedestrian[1..].mobility.element[1].typename = "AttachedMobility" # other hosts follow the movement of the 2nd element of host[0]'s mobility superposition 
#**.pedestrian[1..].mobility.element[1].mobilityModule = "^.^.^.pedestrian[0].mobility.element[1]"

# other hosts are also slightly moving randomly around their position in the group
**.pedestrian[*].mobility.element[2].typename = "MassMobility"
**.pedestrian[*].mobility.element[2].faceForward = false
**.pedestrian[*].mobility.element[2].initFromDisplayString = false
**.pedestrian[*].mobility.element[2].initialX = 0m
**.pedestrian[*].mobility.element[2].initialY = 0m
**.pedestrian[*].mobility.element[2].initialZ = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMinX = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMinY = 0m
**.pedestrian[*].mobility.element[2].constraintAreaMaxX = 50m # limiting the random movement
**.pedestrian[*].mobility.element[2].constraintAreaMaxY = 50m # limiting the random movement
**.pedestrian[*].mobility.element[2].changeInterval = truncnormal(2s, 1s)
**.pedestrian[*].mobility.element[2].angleDelta = normal(0deg, 30deg)
**.pedestrian[*].mobility.element[2].speed = truncnormal(1mps, 0.1mps)



[Config TractorMobility]
description = "tractor"

*.hasVisualizer = true
*.visualizer.mobilityVisualizer.moduleFilter = "**.mobility" # filter for host mobilities, ignore mobility superposition elements
*.visualizer.mobilityVisualizer.displayMovementTrails = true
*.visualizer.mobilityVisualizer.displayOrientations = false
*.visualizer.mobilityVisualizer.displayVelocities = false

#tractor mobility
**.pedestrian[0].mobility.typename = "TractorMobility"
**.pedestrian[0].mobility.x1 = 100m
**.pedestrian[0].mobility.y1 = 100m
**.pedestrian[0].mobility.x2 = 900m
**.pedestrian[0].mobility.y2 = 900m
**.pedestrian[0].mobility.rowCount = 4
**.pedestrian[0].mobility.speed = 1mps

**.pedestrian[1..].mobility.typename = "SuperpositioningMobility"
**.pedestrian[1..].mobility.numElements = 3

# starting from the corner
**.pedestrian[1..].mobility.element[0].typename = "StationaryMobility"
**.pedestrian[1..].mobility.element[0].constraintAreaMinX = 0m
**.pedestrian[1..].mobility.element[0].constraintAreaMinY = 0m
**.pedestrian[1..].mobility.element[0].constraintAreaMaxX = 200m
**.pedestrian[1..].mobility.element[0].constraintAreaMaxY = 200m
**.pedestrian[1..].mobility.element[0].initFromDisplayString = false

#tractor mobility
**.pedestrian[1..].mobility.element[1].typename = "TractorMobility"
**.pedestrian[1..].mobility.element[1].x1 = 0m
**.pedestrian[1..].mobility.element[1].y1 = 0m
**.pedestrian[1..].mobility.element[1].x2 = 800m
**.pedestrian[1..].mobility.element[1].y2 = 800m
**.pedestrian[1..].mobility.element[1].rowCount = 4
**.pedestrian[1..].mobility.element[1].speed = 1mps

# other hosts are also slightly moving randomly around their position in the group
**.pedestrian[1..].mobility.element[2].typename = "MassMobility"
**.pedestrian[1..].mobility.element[2].faceForward = false
**.pedestrian[1..].mobility.element[2].initFromDisplayString = false
**.pedestrian[1..].mobility.element[2].initialX = 0m
**.pedestrian[1..].mobility.element[2].initialY = 0m
**.pedestrian[1..].mobility.element[2].initialZ = 0m
**.pedestrian[1..].mobility.element[2].constraintAreaMinX = 0m
**.pedestrian[1..].mobility.element[2].constraintAreaMinY = 0m
**.pedestrian[1..].mobility.element[2].constraintAreaMaxX = 100m # limiting the random movement
**.pedestrian[1..].mobility.element[2].constraintAreaMaxY = 100m # limiting the random movement
**.pedestrian[1..].mobility.element[2].changeInterval = truncnormal(2s, 1s)
**.pedestrian[1..].mobility.element[2].angleDelta = normal(0deg, 30deg)
**.pedestrian[1..].mobility.element[2].speed = truncnormal(1mps, 0.1mps)
